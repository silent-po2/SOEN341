/**
 * This is the user prototype, this are the main actor on the system.
 */

/**
 * The constructor for the user object.
 *
 * @constructor
 * @param {Integer} id The Id generated by the database.
 * @param {String} email The email of the user.
 * @param {String} firstName The first name of the user.
 * @param {String} lastName The last name of the user.
 * @param {Char} type The type, teacher or parent, of the user.
 */
function User(id, email, firstName, lastName, type) {
  this.id = id;
  this.email = email;
  this.firstName = firstName;
  this.lastName = lastName;
  this.type = type;
}

/**
 * Converts a user object data to an array object.
 *
 * @return {Array} - An array with user data.
 */
User.prototype.toArray = function() {
  let array = [this.id, this.email, this.firstName, this.lastName, this.type];
  return array;
};

/**
 * Converts a JSON object to a new User object.
 * This is useful when recovering session data.
 *
 * @param {Object} user A JSON object.
 * @return {User} - A User object.
 */
User.prototype.create = function(user) {
  return new User(
    user.id,
    user.email,
    user.firstName,
    user.lastName,
    user.type
  );
};

/**
 * Return a string representation of the user object
 *
 * @return {String} - A string of user data.
 */
User.prototype.toString = function() {
  return (
    "The user's ID is: " +
    this.id +
    ' ' +
    ', email is: ' +
    this.email +
    " and user's name is: " +
    this.firstName +
    ' ' +
    this.lastName +
    ' and they are a ' +
    this.type
  );
};

module.exports = User;
